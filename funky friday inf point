local table_1 = {
[1] = 'Server',
[2] = 'SongManager',
[3] = 'UpdateKey'
};
local table_2 = {
[1] = 'Down',
[2] = true,
[3] = 9e9
};
local Target = game:GetService("ReplicatedStorage").RF;
Target:InvokeServer(table_1, table_2);
local table_1 = {
[1] = 'Server',
[2] = 'SongManager',
[3] = 'UpdateKey'
};
local table_2 = {
[1] = 'Left',
[2] = true,
[3] = 9e9
};
local Target = game:GetService("ReplicatedStorage").RF;
Target:InvokeServer(table_1, table_2);
local table_1 = {
[1] = 'Server',
[2] = 'SongManager',
[3] = 'UpdateKey'
};
local table_2 = {
[1] = 'Right',
[2] = true,
[3] = 9e9
};
local Target = game:GetService("ReplicatedStorage").RF;
Target:InvokeServer(table_1, table_2);
local table_1 = {
[1] = 'Server',
[2] = 'SongManager',
[3] = 'UpdateKey'
};
local table_2 = {
[1] = 'Up',
[2] = true,
[3] = 9e9
};
local Target = game:GetService("ReplicatedStorage").RF;
Target:InvokeServer(table_1, table_2);
while wait() do
for i = 1,100 do
local table_1 = {
[1] = 'Server',
[2] = 'SongManager',
[3] = 'UpdateScore'
};
local table_2 = {
[1] = 124214211424
};
local Target = game:GetService("ReplicatedStorage").RF;
coroutine.wrap(function()
Target:InvokeServer(table_1, table_2);
end)()
end
end
